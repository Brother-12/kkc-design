<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kerco.kkc.community.mapper.QuestionMapper">

    <update id="updateQuestionSpecialById" parameterType="com.kerco.kkc.community.entity.Question">
        update community_question set status = #{status} , examination = #{examination} , update_time = #{updateTime}
        where id = #{id};
    </update>

    <update id="deleteQuestionById">
        update community_question set status = 2,update_time = #{updateTime}
        where id = #{id};
    </update>

    <insert id="createQuestion" useGeneratedKeys="true" keyColumn="id" keyProperty="id">
        insert into community_question(title,author_id,author_username,author_avatar,tag_ids,create_time,update_time)
        values(#{title},#{authorId},#{authorUsername},#{authorAvatar},#{tagIds},CURRENT_TIMESTAMP(),CURRENT_TIMESTAMP());
    </insert>

    <select id="getRecentQuestion" resultType="com.kerco.kkc.community.entity.vo.CurrencyShowVo">
        select q.id id,title,author_id,author_avatar,author_username,thumbsup,views,tag_ids,parse_content content,create_time publishTime
        from community_question q
                 inner join community_question_content c on q.id = c.id
        where q.examination = 1 and status = 0
        order by q.create_time desc
            limit 4;
    </select>

    <select id="getSpecialQuestion" resultType="com.kerco.kkc.community.entity.vo.SpecialVo">
        select id special_id,author_id,author_username,author_avatar,title special_title,views
        from community_question
        where examination = 1 and status = 0
        order by views
            limit 4;
    </select>

    <select id="getQuestionShowList" parameterType="map" resultType="com.kerco.kkc.community.entity.vo.QuestionShowVo">
        select q.id id,title,author_id,author_avatar,author_username,thumbsup,views,tag_ids,c.parse_content content,create_time "publishTime"
        from community_question q
                 inner join community_question_content c on q.id = c.id
        where q.examination = 1 and status = 0
        <if test="categoryId != 1 and tagId.size() > 1">
            AND tag_ids regexp replace("<foreach collection="tagId" item="tag" open="(" close=")" separator="|">${tag}</foreach>",' ','')
        </if>
        <if test="categoryId != 1 and tagId.size() == 1">
            AND tag_ids regexp replace("<foreach collection="tagId" item="tag" open="(" close=")" separator="">${tag}</foreach>",' ','')
        </if>
        <choose>
            <when test="condition == 10001">
                order by q.views desc
            </when>
            <otherwise>
                order by q.create_time desc
            </otherwise>
        </choose>
        limit #{page},10;
    </select>
</mapper>
