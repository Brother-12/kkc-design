<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kerco.kkc.community.mapper.ArticleMapper">

    <update id="updateArticleSpecialById" parameterType="com.kerco.kkc.community.entity.Article">
        update community_article set official = #{official},top = #{top},
                                     essence = #{essence},status = #{status},examination = #{examination},update_time = #{updateTime}
        where id = #{id};
    </update>

    <update id="deleteArticleById" >
        update community_article set status = 2,update_time = #{updateTime}
        where id = #{id};
    </update>

    <insert id="createArticle" useGeneratedKeys="true" keyColumn="id" keyProperty="id">
        insert into community_article(title,author_id,author_username,author_avatar,tag_ids,create_time,update_time)
        values(#{title},#{authorId},#{authorUsername},#{authorAvatar},#{tagIds},CURRENT_TIMESTAMP(),CURRENT_TIMESTAMP());
    </insert>

    <update id="incrArticleCount">
        update community_article set views = views + 1 where id = #{id};
    </update>

    <select id="getRecentArticle" resultType="com.kerco.kkc.community.entity.vo.ArticleShowVo">
        select a.id id,title,author_id,author_avatar,author_username,thumbsup,views,official,
               top,essence,tag_ids,parse_content content,first_img,create_time "publishTime"
        from community_article a
                 inner join community_article_content c on a.id = c.id
        where a.examination = 1 and status = 0 and first_img is not null
        order by a.create_time desc
            limit 3;
    </select>

    <select id="getSpecialArticle" resultType="com.kerco.kkc.community.entity.vo.SpecialVo">
        select id special_id,author_id,author_username,author_avatar,title special_title,views
        from community_article
        where examination = 1 and status = 0
        order by views desc
        limit 6;
    </select>

    <select id="getArticleShowList" parameterType="map" resultType="com.kerco.kkc.community.entity.vo.ArticleShowVo">
        select a.id id,title,author_id,author_avatar,author_username,thumbsup,views,official,
               top,essence,tag_ids,parse_content content,first_img,create_time "publishTime"
        from community_article a
                 inner join community_article_content c on a.id = c.id
        where a.examination = 1 and status = 0
         <if test="categoryId != 1 and tagId.size() > 1">
            AND tag_ids regexp replace("<foreach collection="tagId" item="tag" open="(" close=")" separator="|">${tag}</foreach>",' ','')
         </if>
        <if test="categoryId != 1 and tagId.size() == 1">
            AND tag_ids regexp replace("<foreach collection="tagId" item="tag" open="(" close=")" separator="">${tag}</foreach>",' ','')
        </if>
        <choose>
            <when test="condition == 10000">
                order by a.top desc,a.create_time desc
            </when>
            <otherwise>
                order by a.top desc,a.views desc
            </otherwise>
        </choose>
        limit #{page},10;
    </select>

    <select id="getUserArticleShowList" resultType="com.kerco.kkc.community.entity.vo.ArticleShowVo">
        select a.id id,title,author_id,author_avatar,author_username,thumbsup,views,official,
               top,essence,tag_ids,parse_content content,first_img,create_time "publishTime"
        from community_article a
                 inner join community_article_content c on a.id = c.id
        where a.examination = 1 and status = 0
            <if test="id != null">  and author_id = #{id} </if>
           <if test="key != null">and title like #{key}</if>
            <if test="tagId != null">and tag_ids regexp '(${tagId})'</if>
        limit #{page},10;
    </select>

    <select id="getArticleShowById" resultType="com.kerco.kkc.community.entity.vo.ArticleShowVo">
        select a.id,title,author_id,author_avatar,author_username,thumbsup,tag_ids,views,create_time "publishTime",md_content content
        from community_article a
                 inner join community_article_content c on a.id = c.id
        where a.examination = 1 and status = 0 and a.id = #{id};
    </select>

    <select id="getArticleListById" resultType="com.kerco.kkc.community.entity.Article">
        select * from community_article where author_id = #{id};
    </select>

<!--    高效率随机获取数据-->
    <select id="randomArticleShow" resultType="com.kerco.kkc.community.entity.vo.CurrencyShowVo">
        SELECT sh1.* FROM community_article AS sh1
                              JOIN
                          (SELECT
                               ROUND(
                                               RAND() * ((SELECT MAX(id) FROM community_article)-(SELECT MIN(id) FROM community_article))
                                           + (SELECT MIN(id) FROM community_article)
                                   ) AS share_id
                          ) AS sh2
        WHERE sh1.id>=sh2.share_id and status = 0
        order by sh1.id limit 5;
    </select>

    <update id="renewArticle">
        update community_article set title = #{title},tag_ids = #{tagIds},update_time = #{updateTime},examination = #{examination}
        where id = #{id} and author_id = #{authorId};
    </update>

    <update id="fixedTimeUpdateThumbsUp">
        update community_article set thumbsup = #{thumbsup}
        where id = #{id};
    </update>
</mapper>
